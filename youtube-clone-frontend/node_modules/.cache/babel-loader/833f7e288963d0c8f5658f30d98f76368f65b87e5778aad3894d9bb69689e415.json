{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\VS code\\\\yt\\\\youtube-clone-frontend\\\\src\\\\pages\\\\HomeVideos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport VideoTile from './VideoTile';\nimport { API_KEY } from './data';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport mb from '../assets/mb.jpg';\nimport { val_convert } from './data';\nimport 'moment-duration-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeVideos = ({\n  Category\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const fetchChannelDetails = async channelId => {\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${API_KEY}`;\n    try {\n      const response = await fetch(channelUrl);\n      const data = await response.json();\n      return data.items[0].snippet.thumbnails.default.url;\n    } catch (error) {\n      console.error('Error fetching channel details:', error);\n      return null;\n    }\n  };\n  const fetchdata = async () => {\n    let videoList_url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=50&regionCode=US&key=${API_KEY}`;\n    if (Category) {\n      videoList_url += `&videoCategoryId=${Category}`;\n    }\n    try {\n      const response = await fetch(videoList_url);\n      const data = await response.json();\n      if (data.items) {\n        const videosWithChannelImages = await Promise.all(data.items.map(async item => {\n          const channelImage = await fetchChannelDetails(item.snippet.channelId);\n          return {\n            ...item,\n            channelImage\n          };\n        }));\n        setData(videosWithChannelImages);\n      } else {\n        setData([]);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setData([]);\n    }\n  };\n  useEffect(() => {\n    fetchdata();\n  }, [Category]);\n  const formatDuration = duration => {\n    const dur = moment.duration(duration);\n    const hours = dur.hours();\n    const minutes = dur.minutes();\n    const seconds = dur.seconds();\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    } else {\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",\n    children: data.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `video/${item.snippet.categoryId}/${item.id}`,\n        children: /*#__PURE__*/_jsxDEV(VideoTile, {\n          thumbnail: item.snippet.thumbnails.medium.url,\n          channelImg: mb,\n          description: item.snippet.title,\n          channelName: item.snippet.channelTitle,\n          views: val_convert(item.statistics.viewCount),\n          lastTime: moment(item.snippet.publishedAt).fromNow(),\n          videoLength: formatDuration(item.contentDetails.duration)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeVideos, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = HomeVideos;\nexport default HomeVideos;\nvar _c;\n$RefreshReg$(_c, \"HomeVideos\");","map":{"version":3,"names":["React","useEffect","useState","VideoTile","API_KEY","moment","Link","mb","val_convert","jsxDEV","_jsxDEV","HomeVideos","Category","_s","data","setData","fetchChannelDetails","channelId","channelUrl","response","fetch","json","items","snippet","thumbnails","default","url","error","console","fetchdata","videoList_url","videosWithChannelImages","Promise","all","map","item","channelImage","formatDuration","duration","dur","hours","minutes","seconds","toString","padStart","className","children","index","to","categoryId","id","thumbnail","medium","channelImg","description","title","channelName","channelTitle","views","statistics","viewCount","lastTime","publishedAt","fromNow","videoLength","contentDetails","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/VS code/yt/youtube-clone-frontend/src/pages/HomeVideos.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport VideoTile from './VideoTile';\r\nimport { API_KEY } from './data';\r\nimport moment from 'moment'; \r\nimport { Link } from 'react-router-dom';\r\nimport mb from '../assets/mb.jpg';\r\nimport { val_convert } from './data';\r\nimport 'moment-duration-format';\r\nconst HomeVideos = ({ Category }) => {\r\n  const [data, setData] = useState([]);\r\n  const fetchChannelDetails = async (channelId) => {\r\n    const channelUrl = `https://www.googleapis.com/youtube/v3/channels?part=snippet&id=${channelId}&key=${API_KEY}`;\r\n    try {\r\n      const response = await fetch(channelUrl);\r\n      const data = await response.json();\r\n      return data.items[0].snippet.thumbnails.default.url;\r\n    } catch (error) {\r\n      console.error('Error fetching channel details:', error);\r\n      return null;\r\n    }\r\n  };\r\n  const fetchdata = async () => {\r\n    let videoList_url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=50&regionCode=US&key=${API_KEY}`;\r\n    if (Category) {\r\n      videoList_url += `&videoCategoryId=${Category}`;\r\n    }\r\n    try {\r\n      const response = await fetch(videoList_url);\r\n      const data = await response.json();\r\n      if (data.items) {\r\n        const videosWithChannelImages = await Promise.all(\r\n          data.items.map(async (item) => {\r\n            const channelImage = await fetchChannelDetails(item.snippet.channelId);\r\n            return { ...item, channelImage };\r\n          })\r\n        );\r\n        setData(videosWithChannelImages);\r\n      } else {\r\n        setData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setData([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchdata();\r\n  }, [Category]);\r\n  const formatDuration = (duration) => {\r\n    const dur = moment.duration(duration);\r\n    const hours = dur.hours();\r\n    const minutes = dur.minutes();\r\n    const seconds = dur.seconds();\r\n\r\n    if (hours > 0) {\r\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    } else {\r\n      return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n    }\r\n  };\r\n  return (\r\n    <div className='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4'>\r\n      {data.map((item, index) => {\r\n        return (\r\n          <Link key={item.id} to={`video/${item.snippet.categoryId}/${item.id}`}>\r\n            <VideoTile\r\n              thumbnail={item.snippet.thumbnails.medium.url}\r\n              channelImg={mb}\r\n              description={item.snippet.title}\r\n              channelName={item.snippet.channelTitle}\r\n              views={val_convert(item.statistics.viewCount)}\r\n              lastTime={moment (item.snippet.publishedAt).fromNow()}\r\n              videoLength={formatDuration(item.contentDetails.duration)}\r\n            />\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeVideos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}